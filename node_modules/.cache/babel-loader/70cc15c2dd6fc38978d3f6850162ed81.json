{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kareem\\\\wordify3\\\\wordify\\\\src\\\\components\\\\MyDocuments\\\\MyDocuments.jsx\";\nimport React, { Component } from \"react\";\nimport storageService from \"../../services/storageService\";\nimport { getWordId } from \"../../services/API\";\nexport class MyDocuments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listOfDocs: []\n    };\n\n    this.handleDef = async e => {\n      e.preventDefault();\n      console.log(\"HandleDef Ran\");\n      console.log(e.target.text);\n      const search = e.target.text;\n      let WordId = await getWordId(search);\n      console.log(WordId[0].meta.id);\n      console.log(WordId[0].shortdef);\n      const id = WordId[0].meta.id;\n      const definition = WordId[0].shortdef;\n      let stringId = id.toString();\n      var newId;\n      var colon;\n\n      if (stringId.includes(\":\")) {\n        colon = id.indexOf(\":\");\n        newId = stringId.slice(0, colon);\n        this.setState({\n          id: newId,\n          definition: definition\n        });\n      } else {\n        console.log(\"word doesnt have a colon\");\n        this.setState({\n          id: id,\n          definition: definition\n        });\n      }\n    };\n\n    this.showDef = e => {\n      e.preventDefault();\n      console.log(e.target.text);\n    };\n\n    this.handleDelete = e => {\n      console.log(\"I ran handleDelete\");\n      console.log(e.target.value);\n      var matchedName;\n      let listOfDocs = this.state.listOfDocs;\n\n      for (let i = 0; i < this.state.listOfDocs.length; i++) {\n        if (e.target.value === listOfDocs[i].name) {\n          console.log(\"We matched! \" + listOfDocs[i].name);\n          console.log(\"We matched! \" + listOfDocs[i].paragraph);\n          matchedName = {\n            id: listOfDocs[i].name,\n            paragraph: listOfDocs[i].paragraph\n          };\n        }\n      }\n\n      const savedWord = matchedName;\n      storageService.deleteDoc(savedWord);\n      this.componentDidMount();\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Doc List component mounted\");\n    let token = localStorage.getItem(\"token\");\n    return fetch(\"/api/users/docList\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n        body: JSON.stringify({\n          hello: \"hello\"\n        })\n      })\n    }).then(async res => {\n      console.log(\"we got a result! \" + res);\n\n      if (res.ok) {\n        try {\n          let listOfDocs = await res.json();\n          console.log(listOfDocs);\n          this.setState({\n            listOfDocs: listOfDocs\n          });\n          return listOfDocs;\n        } catch (err) {\n          console.log(\"this is the catch err\" + err);\n        }\n\n        throw new Error(\"Email already taken!\");\n      }\n    }).then(() => console.log(this.state.listOfDocs[0].name)).catch(error => console.log(error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Documents\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Tada here are your list of Docs\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, this.state.listOfDocs.map(word => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: this.showDef,\n      className: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, word.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, this.state.listOfDocs.map(word => /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/document\",\n      onClick: this.handleDef,\n      className: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, word.name))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"Submit\",\n      value: word.name,\n      onClick: this.handleDelete,\n      className: \"submit-save\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Delete\")))));\n  }\n\n}\nexport default MyDocuments;","map":{"version":3,"sources":["C:/Users/Kareem/wordify3/wordify/src/components/MyDocuments/MyDocuments.jsx"],"names":["React","Component","storageService","getWordId","MyDocuments","state","listOfDocs","handleDef","e","preventDefault","console","log","target","text","search","WordId","meta","id","shortdef","definition","stringId","toString","newId","colon","includes","indexOf","slice","setState","showDef","handleDelete","value","matchedName","i","length","name","paragraph","savedWord","deleteDoc","componentDidMount","token","localStorage","getItem","fetch","method","headers","Headers","Authorization","body","JSON","stringify","hello","then","res","ok","json","err","Error","catch","error","render","map","word"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport storageService from \"../../services/storageService\";\r\nimport { getWordId } from \"../../services/API\";\r\n\r\nexport class MyDocuments extends Component {\r\n  state = {\r\n    listOfDocs: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Doc List component mounted\");\r\n    let token = localStorage.getItem(\"token\");\r\n    return fetch(\"/api/users/docList\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n        body: JSON.stringify({ hello: \"hello\" }),\r\n      }),\r\n    })\r\n      .then(async (res) => {\r\n        console.log(\"we got a result! \" + res);\r\n        if (res.ok) {\r\n          try {\r\n            let listOfDocs = await res.json();\r\n            console.log(listOfDocs);\r\n            this.setState({\r\n              listOfDocs: listOfDocs,\r\n            });\r\n            return listOfDocs;\r\n          } catch (err) {\r\n            console.log(\"this is the catch err\" + err);\r\n          }\r\n          throw new Error(\"Email already taken!\");\r\n        }\r\n      })\r\n      .then(() => console.log(this.state.listOfDocs[0].name))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  handleDef = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"HandleDef Ran\");\r\n    console.log(e.target.text);\r\n    const search = e.target.text;\r\n    let WordId = await getWordId(search);\r\n    console.log(WordId[0].meta.id);\r\n    console.log(WordId[0].shortdef);\r\n\r\n    const id = WordId[0].meta.id;\r\n    const definition = WordId[0].shortdef;\r\n\r\n    let stringId = id.toString();\r\n    var newId;\r\n    var colon;\r\n    if (stringId.includes(\":\")) {\r\n      colon = id.indexOf(\":\");\r\n      newId = stringId.slice(0, colon);\r\n      this.setState({\r\n        id: newId,\r\n        definition: definition,\r\n      });\r\n    } else {\r\n      console.log(\"word doesnt have a colon\");\r\n      this.setState({\r\n        id: id,\r\n        definition: definition,\r\n      });\r\n    }\r\n  };\r\n\r\n  showDef = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.text);\r\n  };\r\n\r\n  handleDelete = (e) => {\r\n    console.log(\"I ran handleDelete\");\r\n    console.log(e.target.value);\r\n    var matchedName;\r\n    let listOfDocs = this.state.listOfDocs;\r\n    for (let i = 0; i < this.state.listOfDocs.length; i++) {\r\n      if (e.target.value === listOfDocs[i].name) {\r\n        console.log(\"We matched! \" + listOfDocs[i].name);\r\n        console.log(\"We matched! \" + listOfDocs[i].paragraph);\r\n        matchedName = {\r\n          id: listOfDocs[i].name,\r\n          paragraph: listOfDocs[i].paragraph,\r\n        };\r\n      }\r\n    }\r\n    const savedWord = matchedName;\r\n    storageService.deleteDoc(savedWord);\r\n    this.componentDidMount();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"title\">Documents</span>\r\n        <p>Tada here are your list of Docs</p>\r\n        {/* {this.state.listOfDocs[0].name} */}\r\n\r\n        <ul>\r\n          {this.state.listOfDocs.map((word) => (\r\n            <li>\r\n              <a href=\"\" onClick={this.showDef} className=\"word\">\r\n                {word.name}\r\n                <br />\r\n              </a>\r\n              <p>\r\n                {this.state.listOfDocs.map((word) => (\r\n                  <a href=\"/document\" onClick={this.handleDef} className=\"word\">\r\n                    {word.name}\r\n                  </a>\r\n                ))}\r\n              </p>\r\n              <br />\r\n              <button\r\n                type=\"Submit\"\r\n                value={word.name}\r\n                onClick={this.handleDelete}\r\n                className=\"submit-save\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyDocuments;\r\n"]},"metadata":{},"sourceType":"module"}