{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kareem\\\\wordify3\\\\wordify\\\\src\\\\components\\\\Document\\\\Document.jsx\";\nimport React, { Component } from \"react\";\nimport Definition from \"../Definition/Definition\";\nimport { getWordId } from \"../../services/API\";\nimport \"./Document.css\";\nimport storageService from \"../../services/storageService\";\nexport class Document extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"Welcome\",\n      definition: \"Copy and Paste an excerpt that you would like to find the definition of words in\",\n      search: \"\",\n      paragraph: [],\n      docName: \"\"\n    };\n\n    this.handleChange = async e => {\n      e.preventDefault();\n      console.log(\"handleChange ran\");\n      console.log(e.target.value);\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log(\"handlesubmit ran\");\n      console.log(e.target.name.value);\n      const name = e.target.name.value;\n      console.log(e.target.paragraph_text.value);\n      const paragraph = e.target.paragraph_text.value;\n      const myParagraph = `${paragraph}`; // splits up submitted text\n\n      const splitString = myParagraph.split(\" \");\n\n      for (let i = 0; i < splitString.length - 1; i++) {\n        splitString[i] += \" \";\n      }\n\n      console.log(\"this is the splitString: \" + splitString);\n      this.setState({\n        paragraph: splitString,\n        docName: name\n      });\n    };\n\n    this.handleDef = async e => {\n      e.preventDefault();\n      console.log(\"HandleDef Ran\");\n      console.log(e.target.text);\n      const search = e.target.text;\n      let WordId = await getWordId(search);\n      console.log(WordId[0].meta.id);\n      console.log(WordId[0].shortdef);\n      const id = WordId[0].meta.id;\n      const definition = WordId[0].shortdef;\n      this.setState({\n        id: id,\n        definition: definition\n      });\n    };\n\n    this.handleSave = e => {\n      console.log(\"I ran handleSave\");\n      console.log(this.state.id);\n      const savedWord = this.state;\n      storageService.save(savedWord);\n    };\n  }\n\n  async componentDidMount() {\n    let WordId = await getWordId();\n    console.log(WordId[0].meta.id);\n    console.log(WordId[0].shortdef);\n    console.log(\"i mounted\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"other-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"My Document\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Name your passage\",\n      name: \"name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"paragraph_text\",\n      cols: \"50\",\n      rows: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.state.paragraph.map(word => /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/document\",\n      onClick: this.handleDef,\n      className: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, word)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Word : \", this.state.id), /*#__PURE__*/React.createElement(Definition, {\n      definition: this.state.definition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default Document;","map":{"version":3,"sources":["C:/Users/Kareem/wordify3/wordify/src/components/Document/Document.jsx"],"names":["React","Component","Definition","getWordId","storageService","Document","state","id","definition","search","paragraph","docName","handleChange","e","preventDefault","console","log","target","value","handleSubmit","name","paragraph_text","myParagraph","splitString","split","i","length","setState","handleDef","text","WordId","meta","shortdef","handleSave","savedWord","save","componentDidMount","render","map","word"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Definition from \"../Definition/Definition\";\r\nimport { getWordId } from \"../../services/API\";\r\nimport \"./Document.css\";\r\nimport storageService from \"../../services/storageService\";\r\n\r\nexport class Document extends Component {\r\n  state = {\r\n    id: \"Welcome\",\r\n    definition:\r\n      \"Copy and Paste an excerpt that you would like to find the definition of words in\",\r\n    search: \"\",\r\n    paragraph: [],\r\n    docName: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let WordId = await getWordId();\r\n    console.log(WordId[0].meta.id);\r\n    console.log(WordId[0].shortdef);\r\n    console.log(\"i mounted\");\r\n  }\r\n\r\n  handleChange = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"handleChange ran\");\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  // document submission page\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"handlesubmit ran\");\r\n    console.log(e.target.name.value);\r\n    const name = e.target.name.value;\r\n    console.log(e.target.paragraph_text.value);\r\n\r\n    const paragraph = e.target.paragraph_text.value;\r\n    const myParagraph = `${paragraph}`;\r\n    // splits up submitted text\r\n    const splitString = myParagraph.split(\" \");\r\n    for (let i = 0; i < splitString.length - 1; i++) {\r\n      splitString[i] += \" \";\r\n    }\r\n    console.log(\"this is the splitString: \" + splitString);\r\n    this.setState({\r\n      paragraph: splitString,\r\n      docName: name,\r\n    });\r\n  };\r\n\r\n  // definition component\r\n  handleDef = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"HandleDef Ran\");\r\n    console.log(e.target.text);\r\n    const search = e.target.text;\r\n    let WordId = await getWordId(search);\r\n    console.log(WordId[0].meta.id);\r\n    console.log(WordId[0].shortdef);\r\n    const id = WordId[0].meta.id;\r\n    const definition = WordId[0].shortdef;\r\n    this.setState({\r\n      id: id,\r\n      definition: definition,\r\n    });\r\n  };\r\n\r\n  handleSave = (e) => {\r\n    console.log(\"I ran handleSave\");\r\n    console.log(this.state.id);\r\n    const savedWord = this.state;\r\n    storageService.save(savedWord);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"left-side\">\r\n          <span className=\"other-title\">My Document</span>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name your passage\"\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <div>\r\n              <textarea name=\"paragraph_text\" cols=\"50\" rows=\"10\"></textarea>\r\n              <div className=\"btn-container\">\r\n                <input type=\"submit\" name=\"submit\" />\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <button onClick={this.handleSave}>Save</button>\r\n          <p>\r\n            {this.state.paragraph.map((word) => (\r\n              <a href=\"/document\" onClick={this.handleDef} className=\"word\">\r\n                {word}\r\n              </a>\r\n            ))}\r\n          </p>\r\n        </div>\r\n        <div className=\"right-side\">\r\n          <h3>Word : {this.state.id}</h3>\r\n          <Definition definition={this.state.definition} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Document;\r\n"]},"metadata":{},"sourceType":"module"}