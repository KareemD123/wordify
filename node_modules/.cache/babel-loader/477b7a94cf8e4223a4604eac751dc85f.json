{"ast":null,"code":"import tokenService from \"./tokenService\";\nconst BASE_URL = \"/api/users/\";\n\nfunction signup(user) {\n  console.log(\"I made it to the signup\");\n  return fetch(BASE_URL + \"signup\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    }),\n    body: JSON.stringify(user)\n  }).then(res => {\n    console.log(\"we got a result! \" + res);\n    if (res.ok) return res.json(); // Probably a duplicate email\n\n    throw new Error(\"Email already taken!\");\n  }).then(({\n    token\n  }) => {\n    console.log(\"this is the token part of signup function\" + token);\n    tokenService.setToken(token);\n  }); // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    }),\n    body: JSON.stringify(creds)\n  }).then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  }).then(({\n    token\n  }) => tokenService.setToken(token));\n}\n\nfunction test(user) {\n  console.log(\"this is the test function! \" + user);\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n  test\n};","map":{"version":3,"sources":["C:/Users/Kareem/wordify3/wordify/src/services/userService.js"],"names":["tokenService","BASE_URL","signup","user","console","log","fetch","method","headers","Headers","body","JSON","stringify","then","res","ok","json","Error","token","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","test"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,QAAQ,GAAG,aAAjB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAOC,KAAK,CAACL,QAAQ,GAAG,QAAZ,EAAsB;AAChCM,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,sBAAgB;AAAlB,KAAZ,CAFuB;AAGhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AAH0B,GAAtB,CAAL,CAKJU,IALI,CAKEC,GAAD,IAAS;AACbV,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBS,GAAlC;AACA,QAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP,CAFC,CAGb;;AACA,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD,GAVI,EAWJJ,IAXI,CAWC,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAe;AACnBd,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAA8Ca,KAA1D;AACAlB,IAAAA,YAAY,CAACmB,QAAb,CAAsBD,KAAtB;AACD,GAdI,CAAP,CAFoB,CAiBpB;AACA;AACD;;AAED,SAASE,OAAT,GAAmB;AACjB,SAAOpB,YAAY,CAACqB,gBAAb,EAAP;AACD;;AAED,SAASC,MAAT,GAAkB;AAChBtB,EAAAA,YAAY,CAACuB,WAAb;AACD;;AAED,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAOnB,KAAK,CAACL,QAAQ,GAAG,OAAZ,EAAqB;AAC/BM,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,sBAAgB;AAAlB,KAAZ,CAFsB;AAG/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAea,KAAf;AAHyB,GAArB,CAAL,CAKJZ,IALI,CAKEC,GAAD,IAAS;AACb;AACA,QAAIA,GAAG,CAACC,EAAR,EAAY,OAAOD,GAAG,CAACE,IAAJ,EAAP;AACZ,UAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACD,GATI,EAUJJ,IAVI,CAUC,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAelB,YAAY,CAACmB,QAAb,CAAsBD,KAAtB,CAVhB,CAAP;AAWD;;AAED,SAASQ,IAAT,CAAcvB,IAAd,EAAoB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCF,IAA5C;AACD;;AAED,eAAe;AACbD,EAAAA,MADa;AAEbkB,EAAAA,OAFa;AAGbE,EAAAA,MAHa;AAIbE,EAAAA,KAJa;AAKbE,EAAAA;AALa,CAAf","sourcesContent":["import tokenService from \"./tokenService\";\r\n\r\nconst BASE_URL = \"/api/users/\";\r\n\r\nfunction signup(user) {\r\n  console.log(\"I made it to the signup\");\r\n  return fetch(BASE_URL + \"signup\", {\r\n    method: \"POST\",\r\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((res) => {\r\n      console.log(\"we got a result! \" + res);\r\n      if (res.ok) return res.json();\r\n      // Probably a duplicate email\r\n      throw new Error(\"Email already taken!\");\r\n    })\r\n    .then(({ token }) => {\r\n      console.log(\"this is the token part of signup function\" + token);\r\n      tokenService.setToken(token);\r\n    });\r\n  // The above could have been written as\r\n  //.then((token) => token.token);\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + \"login\", {\r\n    method: \"POST\",\r\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n    body: JSON.stringify(creds),\r\n  })\r\n    .then((res) => {\r\n      // Valid login if we have a status of 2xx (res.ok)\r\n      if (res.ok) return res.json();\r\n      throw new Error(\"Bad Credentials!\");\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n}\r\n\r\nfunction test(user) {\r\n  console.log(\"this is the test function! \" + user);\r\n}\r\n\r\nexport default {\r\n  signup,\r\n  getUser,\r\n  logout,\r\n  login,\r\n  test,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}