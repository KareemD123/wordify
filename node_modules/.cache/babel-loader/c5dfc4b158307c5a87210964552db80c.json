{"ast":null,"code":"import tokenService from\"./tokenService\";var BASE_URL=\"/api/users/\";function signup(user){console.log(\"I made it to the signup\");return fetch(BASE_URL+\"signup\",{method:\"POST\",headers:new Headers({\"Content-Type\":\"application/json\"}),body:JSON.stringify(user)}).then(function(res){if(res.ok)return res.json();// Probably a duplicate email\nthrow new Error(\"Email already taken!\");})// Parameter destructuring!\n.then(function(_ref){var token=_ref.token;return tokenService.setToken(token);});// The above could have been written as\n//.then((token) => token.token);\n}function getUser(){return tokenService.getUserFromToken();}function logout(){tokenService.removeToken();}function login(creds){return fetch(BASE_URL+\"login\",{method:\"POST\",headers:new Headers({\"Content-Type\":\"application/json\"}),body:JSON.stringify(creds)}).then(function(res){// Valid login if we have a status of 2xx (res.ok)\nif(res.ok)return res.json();throw new Error(\"Bad Credentials!\");}).then(function(_ref2){var token=_ref2.token;return tokenService.setToken(token);});}function test(user){console.log(\"this is the test function! \"+user);}export default{signup:signup,getUser:getUser,logout:logout,login:login,test:test};","map":{"version":3,"sources":["C:/Users/Kareem/wordify3/wordify/src/services/userService.js"],"names":["tokenService","BASE_URL","signup","user","console","log","fetch","method","headers","Headers","body","JSON","stringify","then","res","ok","json","Error","token","setToken","getUser","getUserFromToken","logout","removeToken","login","creds","test"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,aAAjB,CAEA,QAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAsB,CACpBC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACA,MACEC,CAAAA,KAAK,CAACL,QAAQ,CAAG,QAAZ,CAAsB,CACzBM,MAAM,CAAE,MADiB,CAEzBC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAE,eAAgB,kBAAlB,CAAZ,CAFgB,CAGzBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAHmB,CAAtB,CAAL,CAKGU,IALH,CAKQ,SAACC,GAAD,CAAS,CACb,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ;AACA,KAAM,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAAN,CACD,CATH,CAUE;AAVF,CAWGJ,IAXH,CAWQ,kBAAGK,CAAAA,KAAH,MAAGA,KAAH,OAAelB,CAAAA,YAAY,CAACmB,QAAb,CAAsBD,KAAtB,CAAf,EAXR,CADF,CAcA;AACA;AACD,CAED,QAASE,CAAAA,OAAT,EAAmB,CACjB,MAAOpB,CAAAA,YAAY,CAACqB,gBAAb,EAAP,CACD,CAED,QAASC,CAAAA,MAAT,EAAkB,CAChBtB,YAAY,CAACuB,WAAb,GACD,CAED,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB,MAAOnB,CAAAA,KAAK,CAACL,QAAQ,CAAG,OAAZ,CAAqB,CAC/BM,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CAAE,eAAgB,kBAAlB,CAAZ,CAFsB,CAG/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAea,KAAf,CAHyB,CAArB,CAAL,CAKJZ,IALI,CAKC,SAACC,GAAD,CAAS,CACb;AACA,GAAIA,GAAG,CAACC,EAAR,CAAY,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACZ,KAAM,IAAIC,CAAAA,KAAJ,CAAU,kBAAV,CAAN,CACD,CATI,EAUJJ,IAVI,CAUC,mBAAGK,CAAAA,KAAH,OAAGA,KAAH,OAAelB,CAAAA,YAAY,CAACmB,QAAb,CAAsBD,KAAtB,CAAf,EAVD,CAAP,CAWD,CAED,QAASQ,CAAAA,IAAT,CAAcvB,IAAd,CAAoB,CAClBC,OAAO,CAACC,GAAR,CAAY,8BAAgCF,IAA5C,EACD,CAED,cAAe,CACbD,MAAM,CAANA,MADa,CAEbkB,OAAO,CAAPA,OAFa,CAGbE,MAAM,CAANA,MAHa,CAIbE,KAAK,CAALA,KAJa,CAKbE,IAAI,CAAJA,IALa,CAAf","sourcesContent":["import tokenService from \"./tokenService\";\r\n\r\nconst BASE_URL = \"/api/users/\";\r\n\r\nfunction signup(user) {\r\n  console.log(\"I made it to the signup\");\r\n  return (\r\n    fetch(BASE_URL + \"signup\", {\r\n      method: \"POST\",\r\n      headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) return res.json();\r\n        // Probably a duplicate email\r\n        throw new Error(\"Email already taken!\");\r\n      })\r\n      // Parameter destructuring!\r\n      .then(({ token }) => tokenService.setToken(token))\r\n  );\r\n  // The above could have been written as\r\n  //.then((token) => token.token);\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + \"login\", {\r\n    method: \"POST\",\r\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\r\n    body: JSON.stringify(creds),\r\n  })\r\n    .then((res) => {\r\n      // Valid login if we have a status of 2xx (res.ok)\r\n      if (res.ok) return res.json();\r\n      throw new Error(\"Bad Credentials!\");\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n}\r\n\r\nfunction test(user) {\r\n  console.log(\"this is the test function! \" + user);\r\n}\r\n\r\nexport default {\r\n  signup,\r\n  getUser,\r\n  logout,\r\n  login,\r\n  test,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}