{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kareem\\\\wordify3\\\\wordify\\\\src\\\\components\\\\MyDocuments\\\\MyDocuments.jsx\";\nimport React, { Component } from \"react\";\nimport storageService from \"../../services/storageService\";\nexport class MyDocuments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listOfDocs: []\n    };\n\n    this.showDef = e => {\n      e.preventDefault();\n      console.log(e.target.text);\n    };\n\n    this.handleDelete = e => {\n      console.log(\"I ran handleDelete\");\n      console.log(e.target.value);\n      var matchedName;\n      let listOfWords = this.state.listOfWords;\n\n      for (let i = 0; i < this.state.listOfWords.length; i++) {\n        if (e.target.value == listOfWords[i].name) {\n          console.log(\"We matched! \" + listOfWords[i].name);\n          console.log(\"We matched! \" + listOfWords[i].definition);\n          matchedName = {\n            id: listOfWords[i].name,\n            definition: listOfWords[i].definition\n          };\n        }\n      }\n\n      const savedWord = matchedName;\n      storageService.deleteDoc(savedWord);\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Doc List component mounted\");\n    let token = localStorage.getItem(\"token\");\n    return fetch(\"/api/users/docList\", {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n        body: JSON.stringify({\n          hello: \"hello\"\n        })\n      })\n    }).then(async res => {\n      console.log(\"we got a result! \" + res);\n\n      if (res.ok) {\n        try {\n          let listOfDocs = await res.json();\n          console.log(listOfDocs);\n          this.setState({\n            listOfDocs: listOfDocs\n          });\n          return listOfDocs;\n        } catch (err) {\n          console.log(\"this is the catch err\" + err);\n        }\n\n        throw new Error(\"Email already taken!\");\n      }\n    }).then(() => console.log(this.state.listOfDocs[0].name)).catch(error => console.log(error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Documents\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Tada here are your list of words\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, this.state.listOfDocs.map(word => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      onClick: this.showDef,\n      className: \"word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, word.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), word.paragraph)))));\n  }\n\n}\nexport default MyDocuments;","map":{"version":3,"sources":["C:/Users/Kareem/wordify3/wordify/src/components/MyDocuments/MyDocuments.jsx"],"names":["React","Component","storageService","MyDocuments","state","listOfDocs","showDef","e","preventDefault","console","log","target","text","handleDelete","value","matchedName","listOfWords","i","length","name","definition","id","savedWord","deleteDoc","componentDidMount","token","localStorage","getItem","fetch","method","headers","Headers","Authorization","body","JSON","stringify","hello","then","res","ok","json","setState","err","Error","catch","error","render","map","word","paragraph"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport storageService from \"../../services/storageService\";\r\n\r\nexport class MyDocuments extends Component {\r\n  state = {\r\n    listOfDocs: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Doc List component mounted\");\r\n    let token = localStorage.getItem(\"token\");\r\n    return fetch(\"/api/users/docList\", {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token,\r\n        body: JSON.stringify({ hello: \"hello\" }),\r\n      }),\r\n    })\r\n      .then(async (res) => {\r\n        console.log(\"we got a result! \" + res);\r\n        if (res.ok) {\r\n          try {\r\n            let listOfDocs = await res.json();\r\n            console.log(listOfDocs);\r\n            this.setState({\r\n              listOfDocs: listOfDocs,\r\n            });\r\n            return listOfDocs;\r\n          } catch (err) {\r\n            console.log(\"this is the catch err\" + err);\r\n          }\r\n          throw new Error(\"Email already taken!\");\r\n        }\r\n      })\r\n      .then(() => console.log(this.state.listOfDocs[0].name))\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  showDef = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.text);\r\n  };\r\n\r\n  handleDelete = (e) => {\r\n    console.log(\"I ran handleDelete\");\r\n    console.log(e.target.value);\r\n    var matchedName;\r\n    let listOfWords = this.state.listOfWords;\r\n    for (let i = 0; i < this.state.listOfWords.length; i++) {\r\n      if (e.target.value == listOfWords[i].name) {\r\n        console.log(\"We matched! \" + listOfWords[i].name);\r\n        console.log(\"We matched! \" + listOfWords[i].definition);\r\n        matchedName = {\r\n          id: listOfWords[i].name,\r\n          definition: listOfWords[i].definition,\r\n        };\r\n      }\r\n    }\r\n    const savedWord = matchedName;\r\n    storageService.deleteDoc(savedWord);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"title\">Documents</span>\r\n        <p>Tada here are your list of words</p>\r\n        {/* {this.state.listOfDocs[0].name} */}\r\n\r\n        <ul>\r\n          {this.state.listOfDocs.map((word) => (\r\n            <li>\r\n              <a href=\"\" onClick={this.showDef} className=\"word\">\r\n                {word.name}\r\n                <br />\r\n                {word.paragraph}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyDocuments;\r\n"]},"metadata":{},"sourceType":"module"}